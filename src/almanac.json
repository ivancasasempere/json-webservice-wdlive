<?php header('content-type: application/json; charset=utf-8');

# Copyright 2015 Wayne D Grant (www.waynedgrant.com)
# Licensed under the MIT License

require_once("config.php");
require_once("common.php");
require_once("ClientRaw.php");
require_once("ClientRawExtra.php");

$clientRaw = new ClientRaw(CLIENT_RAW_DIRECTORY . "clientraw.txt");
$clientRawExtra = new ClientRawExtra(CLIENT_RAW_DIRECTORY . "clientrawextra.txt");

$dateAndTime = $clientRaw->getCurrentDateAndTime();

$monthToDateHighOutdoorTemperature = $clientRawExtra->getMonthlyHighOutdoorTemperature()->getAllMeasures();
$monthToDateHighOutdoorTemperature['time'] = $clientRawExtra->getMonthlyHighOutdoorTemperatureDateAndTime()->getAllValues();

$monthToDateLowOutdoorTemperature = $clientRawExtra->getMonthlyLowOutdoorTemperature()->getAllMeasures();
$monthToDateLowOutdoorTemperature['time'] = $clientRawExtra->getMonthlyLowOutdoorTemperatureDateAndTime()->getAllValues();

$monthToDateTemperature = array(
    "high" => $monthToDateHighOutdoorTemperature,
    "low" => $monthToDateLowOutdoorTemperature);

$monthToDateHighPressure = $clientRawExtra->getMonthlyHighSurfacePressure()->getAllMeasures();
$monthToDateHighPressure['time'] = $clientRawExtra->getMonthlyHighSurfacePressureDateAndTime()->getAllValues();

$monthToDateLowPressure = $clientRawExtra->getMonthlyLowSurfacePressure()->getAllMeasures();
$monthToDateLowPressure['time'] = $clientRawExtra->getMonthlyLowSurfacePressureDateAndTime()->getAllValues();

$monthToDatePressure = array(
    "high" => $monthToDateHighPressure,
    "low" => $monthToDateLowPressure);

$monthToDateMaximumRainfallRate = $clientRawExtra->getMonthlyMaximumRainfallRate()->getAllMeasures();
$monthToDateMaximumRainfallRate['time'] = $clientRawExtra->getMonthlyMaximumRainfallRateDateAndTime()->getAllValues();

$monthToDateRainfall = array("max_rate_per_min" => $monthToDateMaximumRainfallRate);

$monthToDateMaximumAverageWindSpeed = array(
    "speed" => $clientRawExtra->getMonthlyMaximumAverageWindSpeed()->getAllMeasures(),
    "direction" => $clientRawExtra->getMonthlyMaximumAverageWindSpeedDirection()->getAllMeasures();
    "time" => $clientRawExtra->getMonthlyMaximumAverageWindSpeedDateAndTime()->getAllValues());

$monthToDateMaximumGustSpeed = array(
    "speed" => $clientRawExtra->getMonthlyMaximumGustSpeed()->getAllMeasures(),
    "direction" => $clientRawExtra->getMonthlyMaximumGustSpeedDirection()->getAllMeasures();
    "time" => $clientRawExtra->getMonthlyMaximumGustSpeedDateAndTime()->getAllValues());

$monthToDateWind = array(
    "max_avg" => $monthToDateMaximumAverageWindSpeed,
    "max_gust" => $monthToDateMaximumGustSpeed);

$monthToDateHighDewPoint = $clientRawExtra->getMonthlyHighDewPoint()->getAllMeasures();
$monthToDateHighDewPoint['time'] = $clientRawExtra->getMonthlyHighDewPointDateAndTime()->getAllValues();

$monthToDateLowDewPoint = $clientRawExtra->getMonthlyLowDewPoint()->getAllMeasures();
$monthToDateLowDewPoint['time'] = $clientRawExtra->getMonthlyLowDewPointDateAndTime()->getAllValues();

$monthToDateDewPoint = array(
    "high" => $monthToDateHighDewPoint,
    "low" => $monthToDateLowDewPoint);

$monthToDateDewPoint = array();

$monthToDateWindChill = array();

$monthToDateHeatIndex = array();

$monthToDateUv = array();

$monthToDate = array(
    "month" => $dateAndTime->getMonth(),
    "year" => $dateAndTime->getYear(),
    "temperature" => $monthToDateTemperature,
    "pressure" => $monthToDatePressure,
    "rainfall" => $monthToDateRainfall,
    "wind" => $monthToDateWind,
    "dew_point" => $monthToDateDewPoint,
    "wind_chill" => $monthToDateWindChill,
    "heat_index" => $monthToDateHeatIndex,
    "uv" => $monthToDateUv);

$yearToDate = array(
    "year" => $dateAndTime->getYear(),
    "temperature" => array(),
    "pressure" => array(),
    "rainfall" => array(),
    "wind" => array(),
    "dew_point" => array(),
    "wind_chill" => array(),
    "heat_index" => array(),
    "uv" => array());

$allTime = array(
    "temperature" => array(),
    "pressure" => array(),
    "rainfall" => array(),
    "wind" => array(),
    "dew_point" => array(),
    "wind_chill" => array(),
    "heat_index" => array(),
    "uv" => array());

$data = array(
    "endpoint" => createEndpoint(),
    "station" => createStation($clientRaw),
    "time" => $dateAndTime->getAllValues(),
    "month_to_date" => $monthToDate,
    "year_to_date" => $yearToDate,
    "all_time" => $allTime);

$json = json_encode($data);

echo isset($_GET['callback']) ? "{$_GET['callback']}($json)" : $json;

?>
